name: CI/CD Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Karena index.php sudah ada, tidak perlu membuat temporary index
      
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y php php-cli php-mysql unzip google-chrome-stable mariadb-server mariadb-client curl

      - name: Start MariaDB Service
        run: |
          sudo systemctl start mariadb
          sudo systemctl enable mariadb
          sudo systemctl restart mariadb

      - name: Setup Database
        run: |
          # Sesuaikan nama database dengan yang digunakan di functions.php (yaitu "badcrud")
          sudo mysql --user=root --execute="CREATE DATABASE IF NOT EXISTS badcrud;"
          # Ganti semua kemunculan 'damncrud' menjadi 'badcrud' dalam file SQL
          sed -i 's/damncrud/badcrud/g' db/damncrud.sql
          sudo mysql --user=root badcrud < db/damncrud.sql
          sudo mysql --user=root --execute="GRANT ALL PRIVILEGES ON badcrud.* TO 'root'@'localhost' IDENTIFIED BY '';"
          sudo mysql --user=root --execute="FLUSH PRIVILEGES;"

      - name: Verify Database Setup
        run: |
          sudo mysql -u root -e "USE badcrud; SHOW TABLES;"

      - name: Start PHP server
        run: |
          nohup php -S 127.0.0.1:8000 -t . > server.log 2>&1 &
          sleep 5
          echo "✅ Checking server log:"
          cat server.log

      - name: Wait for server to start
        run: |
          for i in {1..10}; do
            curl -s http://127.0.0.1:8000/ && echo "✅ Server is up!" && exit 0
            echo "⏳ Waiting for server..."
            sleep 2
          done
          echo "❌ Server failed to start!"
          exit 1

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pytest in Parallel
        run: |
          pytest -n auto --maxfail=1 --disable-warnings

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-results
          path: test-results/

      - name: Upload Test Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-logs
          path: test-results/test_log.txt
